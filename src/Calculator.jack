class Calculator {
    // я не буду переписывать это в списки
    static String s_input;
    static String s_result;
    static String s_error;
    static String s_summary_0;
    static String s_summary_1;
    static String s_summary_2;
    static String s_summary_3;
    static String s_summary_4;
    static String s_summary_5;
    static String s_summary_6;
    static String s_summary_7;
    static String s_summary_8;
    static String s_summary_9;
    static String s_summary_10;
    static String s_summary_11;
    static String s_summary_12;
    static String s_summary_13;
    static String s_summary_14;
    static String s_summary_15;
    static String s_summary_16;
    static String s_summary_17;
    static String s_summary_18;

    static char key;
    static boolean exit;
    static String input;
    static Result result;

    function void init() {
        let s_input = "Input: ";
        let s_result = "Result: ";
        let s_error = "Error: ";
        let s_summary_0 = "How to use: ";
        let s_summary_1 = "1. Enter an expression, get result instantly.";
        let s_summary_2 = "2. Press the backspace to delete a character.";
        let s_summary_3 = "3. Ignores spaces, letters, your name, pincode, birthday, etc.";
        let s_summary_4 = "4. Supports +, -, *, /, <, =, >, m as min, M as max, ( and ).";
        let s_summary_5 = "5. Does not support negativing expressions, mult by brackets.";
        let s_summary_6 = "6. Press Shift + Q to quit.";
        let s_summary_7 =  "  _______ ";
        let s_summary_8 =  " |       |";
        let s_summary_9 =  " | (___) |";
        let s_summary_10 = " |       |";
        let s_summary_11 = " | 7 8 9 |";
        let s_summary_12 = " |       |";
        let s_summary_13 = " | 4 5 6 |";
        let s_summary_14 = " |       |";
        let s_summary_15 = " | 1 2 3 |";
        let s_summary_16 = " |       |";
        let s_summary_17 = " | + - = |";
        let s_summary_18 = " |_______|";
        
        return;
    }

    function void start() {
        let input = String.new(1400); // Достаточно чтобы забить весь экран символами
        let exit = false;

        do Calculator.updateResult(input, Eval.eval(input));

        while (~exit) {
            while (key = 0) {
                let key = Keyboard.keyPressed();
            }

            if (key = 81) { // shift Q
                let exit = true;
            }
            else {
                if (key = 129) { // backspace
                    if (input.length() > 0) {
                        do input.eraseLastChar();
                    }
                }
                else {
                    do input.appendChar(key);
                }

                do Printer.clear();
                do Calculator.updateResult(input, Eval.eval(input));
            }

            // waits for the key to be released.
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
            }
        }
        
        do input.dispose();
        return;
    }

    function void updateResult(String input, Result result) {
        do Printer.print(s_input);
        do Printer.println(input);
        if (result.isOk()) {
            do Printer.drop("Result: ");
        }
        else {
            do Printer.drop("Error: ");
        }
        do Printer.println(result.unwrap());
        do result.dispose();

        if (input.length() < 864) { // кол-во символов во вводе до скрытия подсказок
            do Printer.println(s_summary_0);
            do Printer.println(s_summary_1);
            do Printer.println(s_summary_2);
            do Printer.println(s_summary_3);
            do Printer.println(s_summary_4);
            do Printer.println(s_summary_5);
            do Printer.println(s_summary_6);
        }
        if (input.length() < 96) { // кол-во символов во вводе до скрытия арта
            do Printer.println(s_summary_7);
            do Printer.println(s_summary_8);
            do Printer.println(s_summary_9);
            do Printer.println(s_summary_10);
            do Printer.println(s_summary_11);
            do Printer.println(s_summary_12);
            do Printer.println(s_summary_13);
            do Printer.println(s_summary_14);
            do Printer.println(s_summary_15);
            do Printer.println(s_summary_16);
            do Printer.println(s_summary_17);
            do Printer.println(s_summary_18);
        }
        
        return;
    }
}